<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2-2.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<context:component-scan base-package="org.mitre.web" />

	<!-- HTTP security configurations -->      
	<security:global-method-security pre-post-annotations="enabled">
		<security:expression-handler ref="oauthExpressionHandler" />
	</security:global-method-security>
	<oauth:expression-handler id="oauthExpressionHandler" />
	<oauth:web-expression-handler id="oauthWebExpressionHandler" />
	<security:http auto-config="false" request-matcher="regex" use-expressions="true"
	    disable-url-rewriting="true" entry-point-ref="oauthAuthenticationEntryPoint"
	    pattern="/**">
	    <security:custom-filter before="PRE_AUTH_FILTER" ref="resourceServerFilter" />
	    <security:intercept-url pattern="/**" access="#oauth2.hasScope('profile')"/>
	    <security:intercept-url pattern="/email/.*" access="#oauth2.hasScope('email')"/>
	    <security:intercept-url pattern="/patient/.*" access="#oauth2.hasScope('patient')"/>
	    <security:logout />
	    <security:expression-handler ref="oauthWebExpressionHandler" />
	</security:http>  
	<bean id="oauthAuthenticationEntryPoint" class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
	    <property name="realmName" value="theRealm" />
	</bean> 
	<security:authentication-manager alias="authenticationManager" /> 
		
	<!-- Introspection Services -->
	<oauth:resource-server id="resourceServerFilter" token-services-ref="introspectingService" />
	
	<bean id="introspectingService" class="org.mitre.oauth2.introspectingfilter.IntrospectingTokenService">
	    <property name="introspectionConfigurationService" ref="staticIntrospectionConfigurationService">
	    </property>
	</bean>

	<bean class="org.mitre.oauth2.introspectingfilter.service.impl.StaticIntrospectionConfigurationService" id="staticIntrospectionConfigurationService">
	   <property name="introspectionUrl" value="http://localhost:8080/openid-connect-server-webapp/introspect" />
	   <property name="clientConfiguration">
	     <bean class="org.mitre.oauth2.model.RegisteredClient">
	       <property name="clientId" value="4c7b8561-e011-4581-a74d-8603c32f8916"/>
	       <property name="clientSecret" value="FF52r1eOPd4DDcby1cUYGBGNvIvDbr2cboKbjN0b88acS1hG5rN3PMBHySnYzO1ioqeKf3_sWjgADd7Kf6Nggw"/>
	     </bean>
	   </property>
	</bean>

</beans>
